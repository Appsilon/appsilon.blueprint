% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R
\name{useToaster}
\alias{useToaster}
\title{Toaster}
\usage{
useToaster(...)
}
\arguments{
\item{...}{Component props and children. See the official Blueprint docs for details.}
}
\description{
Documentation: \url{https://blueprintjs.com/docs/#core/components/toast}
}
\examples{
library(appsilon.blueprint)
library(shiny)

ui <- function(id) {
  ns <- NS(id)
  tagList(
    useToaster(position = "top"),
    H3("Simple toasts"),
    ButtonGroup(
      Button.shinyInput(
        inputId = ns("toastDanger"),
        "Danger",
        intent = "danger"
      ),
      Button.shinyInput(
        inputId = ns("toastWarning"),
        "Warning",
        intent = "warning"
      ),
      Button.shinyInput(
        inputId = ns("toastSuccess"),
        "Success",
        intent = "success"
      ),
      Button.shinyInput(
        inputId = ns("toastPrimary"),
        "Primary",
        intent = "primary"
      )
    ),
    H3("Progress"),
    Button.shinyInput(
      inputId = ns("toastProgress"),
      "Progress",
      intent = "primary"
    )
  )
}

server <- function(id) {
  moduleServer(id, function(input, output, session) {
    observeEvent(input$toastDanger, {
      showToast(message = "Danger!", intent = "Danger")
    })
    observeEvent(input$toastWarning, {
      showToast(message = "Warning!", intent = "warning", icon = "warning-sign")
    })
    observeEvent(input$toastSuccess, {
      showToast(message = "Success!", intent = "Success", icon = "hand")
    })
    observeEvent(input$toastPrimary, {
      showToast(message = "Primary!", intent = "primary")
    })

    counter <- 0

    doRun <- reactiveVal(FALSE)
    observeEvent(input$toastProgress, {
      counter <<- 0
      doRun(TRUE)
    })

    observe({
      req(doRun())
      if (counter <= 100) {
        showToast(message = counter, intent = "primary", key = 1)
        counter <<- counter + 1
        invalidateLater(10)
      } else {
        showToast(message = "Completed!", intent = "success", key = 1)
        doRun(FALSE)
      }
    })
  })
}

if (interactive()) shinyApp(ui("app"), function(input, output) server("app"))
}
